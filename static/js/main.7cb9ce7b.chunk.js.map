{"version":3,"sources":["Components/TransactionListing.jsx","Components/TransactionDetails.jsx","Components/Account.jsx","logo.svg","App.js","Routes.jsx","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","table","minWidth","Button","margin","spacing","TransactionListing","props","useState","error","setError","classes","history","useHistory","location","useLocation","transactionData","setTransactionData","jsonFile","state","Data","useEffect","getTransactionList","console","log","fetch","headers","Accept","then","response","json","myJson","TableContainer","component","Paper","className","onClick","goBack","variant","color","Table","TableHead","TableRow","TableCell","align","TableBody","map","row","index","scope","id","account_id","from","transaction_date","amount","push","pathname","search","Details","handleTransactionDetails","root","title","fontSize","TransactionDetails","details","data-testid","Card","CardContent","Typography","description","transaction_processed","card","display","active","Account","accountData","setAccountData","accountMap","length","accountList","items","is_active","account_name","account_number","balance","currency","CardActions","size","handleTransactionList","App","src","logo","alt","Routes","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7cb9ce7b.chunk.js","sourcesContent":["import Table from \"@material-ui/core/Table\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { useLocation, useHistory } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport VisibilityOutlinedIcon from \"@material-ui/icons/VisibilityOutlined\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n  Button: {\r\n    margin: theme.spacing(2),\r\n  },\r\n}));\r\nconst TransactionListing = (props) => {\r\n  const [error, setError] = useState(null);\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const [transactionData, setTransactionData] = useState([]);\r\n  const jsonFile = location.state.Data;\r\n  const goHome = () => {\r\n    history.goBack();\r\n  };\r\n\r\n  useEffect(() => {\r\n    getTransactionList();\r\n  });\r\n  const getTransactionList = () => {\r\n    console.log(jsonFile);\r\n    fetch(jsonFile, {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n    })\r\n      .then(function (response) {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        function (myJson) {\r\n          setTransactionData(myJson);\r\n        },\r\n        (error) => {\r\n          setError(\"Unable to find TransactionsDetails for this account\");\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n  if (error) {\r\n    return (\r\n      <div>\r\n        <b>Error: {error} </b>\r\n      </div>\r\n    );\r\n  }\r\n  const handleTransactionDetails = (index, id) => {\r\n    try {\r\n      history.push({\r\n        pathname: \"/transactions:\",\r\n        search: id + \"/transactiondetails\",\r\n        state: { Details: transactionData[index] },\r\n      });\r\n    } catch (error) {\r\n      setError(\"Transaction details cannaot be fetched\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Button\r\n        className={classes.Button}\r\n        onClick={goHome}\r\n        variant=\"outlined\"\r\n        color=\"primary\"\r\n      >\r\n        Go To Main Accounts\r\n      </Button>\r\n      <Table className={classes.table}>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell align=\"center\">Id</TableCell>\r\n            <TableCell align=\"center\">Account_Id</TableCell>\r\n            <TableCell align=\"center\">Account_Type</TableCell>\r\n            <TableCell align=\"center\">Transaction_Date</TableCell>\r\n            <TableCell align=\"center\">Amount</TableCell>\r\n            <TableCell align=\"center\">Action</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {{ transactionData } &&\r\n            transactionData.map((row, index) => (\r\n              <TableRow key={row.id}>\r\n                <TableCell align=\"center\" component=\"th\" scope=\"row\">\r\n                  {row.id}\r\n                </TableCell>\r\n                <TableCell align=\"center\">{row.account_id}</TableCell>\r\n                <TableCell align=\"center\">{row.from}</TableCell>\r\n                <TableCell align=\"center\">{row.transaction_date}</TableCell>\r\n                <TableCell align=\"center\">{row.amount}</TableCell>\r\n                <TableCell align=\"center\">\r\n                  <VisibilityOutlinedIcon\r\n                    color=\"primary\"\r\n                    onClick={() => {\r\n                      handleTransactionDetails(index, row.id);\r\n                    }}\r\n                  />\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\nexport default TransactionListing;\r\n","import { useLocation, useHistory } from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: \"50%\",\r\n    margin: 5,\r\n  },\r\n\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  Button: {\r\n    margin: 12,\r\n  },\r\n});\r\nconst TransactionDetails = (props) => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const goBack = () => {\r\n    history.goBack();\r\n  };\r\n\r\n  const details = location.state.Details;\r\n  return (\r\n    <div>\r\n      <Button\r\n        className={classes.Button}\r\n        variant=\"outlined\"\r\n        color=\"primary\"\r\n        onClick={goBack}\r\n        data-testid=\"back-id\"\r\n      >\r\n        Back\r\n      </Button>\r\n      <Card className={classes.root} variant=\"outlined\">\r\n        <CardContent>\r\n          <Typography color=\"textprimary\">\r\n            <b>AccId:</b>\r\n            {details.account_id}\r\n          </Typography>\r\n          <Typography color=\"primary\">\r\n            <b>{details.from}</b>\r\n          </Typography>\r\n          <Typography color=\"textprimary\">\r\n            <b>Description:</b> {details.description}\r\n          </Typography>\r\n          <Typography color=\"textprimary\">\r\n            <b>Date:</b> {details.transaction_date}\r\n          </Typography>\r\n          <Typography color=\"textprimary\">\r\n            <b> Processed:</b>\r\n            {details.transaction_processed ? (\r\n              <CheckIcon color=\"primary\" />\r\n            ) : (\r\n              <CloseIcon color=\"secondary\" />\r\n            )}\r\n          </Typography>\r\n          <Typography color=\"textprimary\">\r\n            <b>Amount:</b>\r\n            {details.amount}\r\n          </Typography>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\nexport default TransactionDetails;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    minWidth: 250,\r\n    display: \"inline-block\",\r\n    margin: theme.spacing(7),\r\n  },\r\n\r\n  title: {\r\n    margin: theme.spacing(5),\r\n  },\r\n\r\n  Button: {\r\n    margin: theme.spacing(2),\r\n  },\r\n  active: {\r\n    color: \"#11cb5f\",\r\n  },\r\n}));\r\nconst Account = () => {\r\n  console.log(\"inside account\");\r\n  const classes = useStyles();\r\n\r\n  const [accountData, setAccountData] = useState([]);\r\n  const [error, setError] = useState(null);\r\n  const history = useHistory();\r\n  const accountMap = [\r\n    \"transactions-1.json\",\r\n    \"transactions-2.json\",\r\n    \"transactions-3.json\",\r\n    \"transactions-4.json\",\r\n  ];\r\n  const goHome = () => {\r\n    history.goBack();\r\n  };\r\n  const handleTransactionList = (index, id) => {\r\n    try {\r\n      let jsonFile = accountMap[index];\r\n\r\n      history.push({\r\n        pathname: \"/accounts:\",\r\n        search: id + \"/transaction\",\r\n        state: { Data: jsonFile },\r\n      });\r\n    } catch (error) {\r\n      setError(\"Json file is not found\");\r\n    }\r\n  };\r\n\r\n  const getAccountData = () => {\r\n    fetch(\"./accounts.json\", {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n    })\r\n      .then(function (response) {\r\n        //setloading(true);\r\n        console.log(response);\r\n        return response.json();\r\n      })\r\n      .then(\r\n        function (myJson) {\r\n          console.log(myJson);\r\n          setAccountData(myJson);\r\n        },\r\n        (error) => {\r\n          setError(\"Unable to find Transactions for this account\");\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  useEffect(() => {\r\n    getAccountData();\r\n    return function cleanup() {};\r\n  }, []);\r\n  if (error) {\r\n    return (\r\n      <div>\r\n        <b>Error: {error} </b>\r\n      </div>\r\n    );\r\n  }\r\n  if (accountData.length > 0) {\r\n    var accountList = accountData.map((items, index) => (\r\n      <>\r\n        <Card\r\n          key={items.id}\r\n          className={classes.card}\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n        >\r\n          <CardContent>\r\n            {items.is_active ? (\r\n              <Typography className={classes.active} align=\"left\">\r\n                Active\r\n              </Typography>\r\n            ) : (\r\n              <Typography color=\"secondary\" align=\"left\">\r\n                Inactive\r\n              </Typography>\r\n            )}\r\n            <Typography align=\"center\">\r\n              <b> {items.account_name}</b>\r\n            </Typography>\r\n            <Typography align=\"center\">{items.account_number}</Typography>\r\n            <Typography align=\"center\">\r\n              Balance {items.balance}\r\n              {items.currency}\r\n            </Typography>\r\n          </CardContent>\r\n          <CardActions align=\"center\">\r\n            <Button\r\n              size=\"medium\"\r\n              onClick={() => {\r\n                handleTransactionList(index, items.id);\r\n              }}\r\n            >\r\n              <b>View</b>\r\n            </Button>\r\n          </CardActions>\r\n        </Card>\r\n      </>\r\n    ));\r\n  }\r\n  return (\r\n    <div>\r\n      <Button\r\n        size=\"small\"\r\n        color=\"primary\"\r\n        onClick={goHome}\r\n        variant=\"outlined\"\r\n        className={classes.Button}\r\n      >\r\n        <b>Home</b>\r\n      </Button>\r\n      <Typography component=\"h1\" variant=\"h4\" align=\"center\">\r\n        Accounts\r\n      </Typography>\r\n      {accountList}\r\n    </div>\r\n  );\r\n};\r\nexport default Account;\r\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { useHistory } from \"react-router-dom\";\nimport { Button } from \"@material-ui/core\";\nimport React from \"react\";\n\nfunction App() {\n  const history = useHistory();\n  const viewAccounts = () => {\n    history.push(\"/accounts\");\n  };\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>Welcome to the Bank App.Please click to view the Accounts</p>\n        <Button size=\"small\" color=\"primary\" onClick={viewAccounts}>\n          <b>View-Accounts</b>\n        </Button>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\r\nimport { Route, BrowserRouter as Router, Switch } from \"react-router-dom\";\r\nimport TransactionListing from \"./Components/TransactionListing\";\r\nimport TransactionDetails from \"./Components/TransactionDetails\";\r\nimport Account from \"./Components/Account\";\r\nimport App from \"./App\";\r\nconst Routes = () => {\r\n  console.log(\"inside routes\");\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route path=\"/accounts\" component={Account} />\r\n        <Route path=\"/accounts:\" component={TransactionListing} />\r\n        <Route path=\"/transactions:\" component={TransactionDetails} />\r\n        <Route path=\"/\" component={App} />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Routes from \"./Routes\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Routes />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}